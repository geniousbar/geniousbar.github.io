<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知识总结</title>
  <subtitle>日常知识总结</subtitle>
  <id>https://geniousbar.github.io</id>
  <link href="https://geniousbar.github.io"/>
  <link href="https://geniousbar.github.io/feed.xml" rel="self"/>
  <updated>2017-02-25T08:00:00+08:00</updated>
  <author>
    <name>geniousbar</name>
  </author>
  <entry>
    <title>Docker</title>
    <link rel="alternate" href="https://geniousbar.github.io/2017/02/25/docker/"/>
    <id>https://geniousbar.github.io/2017/02/25/docker/</id>
    <published>2017-02-25T08:00:00+08:00</published>
    <updated>2017-04-13T18:12:29+08:00</updated>
    <author>
      <name>geniousbar</name>
    </author>
    <summary type="html">安装docker
阿里云的安装脚本
curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -
使用脚本自动安装
Docker 官方为了简化安装流程，提供了一套安装脚本，CentOS 系统上可以使用这套脚本安装：
curl -sSL https://get.docker.com/ | sh

DaoCloud 的安装脚本
curl -sSL https://get.daocloud</summary>
  </entry>
  <entry>
    <title>Postgres</title>
    <link rel="alternate" href="https://geniousbar.github.io/2017/01/13/postgres/"/>
    <id>https://geniousbar.github.io/2017/01/13/postgres/</id>
    <published>2017-01-13T08:00:00+08:00</published>
    <updated>2017-04-13T18:16:28+08:00</updated>
    <author>
      <name>geniousbar</name>
    </author>
    <summary type="html">pg创建只读用户
SELECT date_trunc('minute', dd) :: TIMESTAMP
FROM generate_series('2016-10-01' :: TIMESTAMP, '2016-12-31' :: TIMESTAMP, '10 minute' :: INTERVAL) dd;

CREATE USER read_from_pg WITH ENCRYPTED PASSWORD '...';
GRANT CONNECT ON DATABASE test to read_from_pg</summary>
  </entry>
  <entry>
    <title>Firefox</title>
    <link rel="alternate" href="https://geniousbar.github.io/2016/11/11/firefox/"/>
    <id>https://geniousbar.github.io/2016/11/11/firefox/</id>
    <published>2016-11-11T08:00:00+08:00</published>
    <updated>2017-04-13T18:17:57+08:00</updated>
    <author>
      <name>geniousbar</name>
    </author>
    <summary type="html">如何才能使用非签名的附加组件？（高级用户）

Firefox ESR 45版，以及 开发者版 和 Nightly 版，将允许通过改变偏好来屏蔽增强的附加组件签名要求，请在 Firefox 配置编辑器（about:config 页）将 xpinstall.signatures.required 的值改为 false。还有其它一些山寨版的 Firefox 也允许此项屏蔽。更多内容，参阅 MozillaWiki 文章 附加组件/扩展签名。
</summary>
  </entry>
  <entry>
    <title>Ruby</title>
    <link rel="alternate" href="https://geniousbar.github.io/2016/10/21/ruby-magic/"/>
    <id>https://geniousbar.github.io/2016/10/21/ruby-magic/</id>
    <published>2016-10-21T08:00:00+08:00</published>
    <updated>2017-04-13T18:24:42+08:00</updated>
    <author>
      <name>geniousbar</name>
    </author>
    <summary type="html">排列组合
arr = [1, 2, 3, 4, 5]
arr.combination(3).to_a
ary.each_cons(3).to_a

ruby GIL
1: Ruby MRI为了线程安全，用了GIL只支持单核。任何时刻只有一个线程在运行：当一个Thread阻塞时（比如IO, sleep等），就会切换到另个一线程。 所以就算用了celluloid, puma自动创建多线程的，MRI下每个进程还是单核。
而Rubinius，JRuby则没有GIL，支持多核（每个线程分配一个cpu）。
2</summary>
  </entry>
  <entry>
    <title>Javascript 语言精粹</title>
    <link rel="alternate" href="https://geniousbar.github.io/2016/10/01/javascript-good-part/"/>
    <id>https://geniousbar.github.io/2016/10/01/javascript-good-part/</id>
    <published>2016-10-01T08:00:00+08:00</published>
    <updated>2017-04-14T11:58:10+08:00</updated>
    <author>
      <name>geniousbar</name>
    </author>
    <summary type="html">javascrip 语言精粹


假值： false, null, undefined, 0, ‘ ’, NaN
数据类型： 数字， 字符串， 布尔， null， undefined， 对象
反射： typeof, hasOwnProperty
delete： 不会触及原型任何对象， 会显露出来原型中的对象属性


函数


函数也是对象，只是可以调用
调用模式： 方法调用模式， 函数调用模式， 构造器调用模式，apply调用模式（在初始化this上存在差异）
函数调用中， 多余或者不足的形式参
</summary>
  </entry>
  <entry>
    <title>linux tar command</title>
    <link rel="alternate" href="https://geniousbar.github.io/2016/09/07/linux-tar/"/>
    <id>https://geniousbar.github.io/2016/09/07/linux-tar/</id>
    <published>2016-09-07T08:00:00+08:00</published>
    <updated>2017-04-13T18:23:58+08:00</updated>
    <author>
      <name>geniousbar</name>
    </author>
    <summary type="html">zip

zip可能是目前使用得最多的文档压缩格式。

它最大的优点就是在不同的操作系统平台，比如Linux， Windows以及Mac OS上使用。缺点就是支持的压缩率不是很高，而tar.gz和tar.gz2在压缩率方面做得非常好。闲话少说，我们步入正题吧：

我们可以使用下列的命令压缩一个目录：
zip -r archivename.zip directoryto_compress

下面是如果解压一个zip文档：
unzip archive_name.zip

tar.gz

这种格式是我</summary>
  </entry>
</feed>
